@model PaginationList<Cars.ViewModels.VehicleMakeVM>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-action no-color">
        <p>
            Search by name: <input type="text" name="searchString" value="@ViewData["Filter"]" />
            <input type="submit" value="Search" class="btn btn-secondary" />
            <a asp-action="Index">Return to list</a>

        </p>
    </div>
</form>

<table id="tabelIndex" class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]">Name</a>
            </th>
            <th>
                Abrv
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {

            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abrv)
                </td>

                @if (SignInManager.IsSignedIn(User))
                {
                    if (User.IsInRole("Administrator"))
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.MakeId">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.MakeId">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.MakeId">Delete</a>
                        </td>

                    }
                }

            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.PreviousPage ? "disabled" : "";
    var nextDisabled = !Model.NextPage ? "disabled" : "";
}

<a asp.action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-secondary @prevDisabled">
    Previous
</a>

<a asp.action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-secondary @nextDisabled">
    Next
</a>
